<?php
/**
 * @file
 * Code for the Playbox Battles feature.
 */

include_once 'playbox_battles.features.inc';

/**
 * Implementation of hook_init()
 */
function playbox_battles_init() {
  // Load CS and JS
  drupal_add_css(drupal_get_path('module', 'playbox_battles') . '/css/playbox_battles.css');
}

/**
 * Implementation of hook_theme().
 */
function playbox_battles_theme($existing, $type, $theme, $path) {
  // Replace each dash with an underscore in the hook name.
  $themes['views_view_fields__playbox_battles__playbox_battles_featured_1'] = array(
    'template' => 'views-view-fields--playbox-battles--playbox-battles-featured-1',
    'original hook' => 'views_view_fields',
    'path' => drupal_get_path('module', 'playbox_battles') . '/templates',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view_fields',
      'playbox_battles_preprocess_views_view_fields__playbox_battles__playbox_battles_featured_1',
    ),
    'arguments' => array('view' => NULL, 'options' => NULL, 'row' => NULL),
  );

  return $themes;
}

/**
 * Implementation of hook_menu().
 */
function playbox_battles_menu() {
  $items['playbox-battles/vote/nojs/%/%'] = array(
    'page callback' => 'playbox_battles_vote',
    'page arguments' => array(3, 4, 5),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['playbox-battles/vote/ajax/%/%'] = array(
    'delivery callback' => 'ajax_deliver',
  ) + $items['playbox-battle/vote/nojs/%/%'];

  return $items;
}

/**
 * Implements hook_preprocess_views_view_fields()
 */
function playbox_battles_preprocess_views_view_fields__playbox_battles__playbox_battles_featured_1(&$variables) {
  // We need that ajax magixxx
  drupal_add_library('system', 'drupal.ajax');
  $nid = $variables['row']->nid;

  $query = array(
    'tok' => drupal_get_token('playbox_battles_vote_' . $nid),
  ) + drupal_get_destination();

  $variables['options']['president_attributes'] = l(t('Delete'), 'admin/my-custom-log/delete/nojs/' . $flid, array('attributes' => array('class' => 'use-ajax'), 'query' => $query));

  $variables['options']['president_attributes']['class'][] = 'battler-box';
  $variables['options']['robot_attributes']['class'][] = 'battler-box';
  if ($variables['row']->field_field_playbox_battle_completed[0]['raw']['value'] == 1) {
    if ($variables['row']->field_field_playbox_robot_votes[0]['raw']['value'] == $variables['row']->field_field_playbox_votes_to_win[0]['raw']['value']) {
      $variables['options']['president_attributes']['class'][] = 'battler-battle-loser';
      $variables['options']['robot_attributes']['class'][] = 'battler-battle-winner';
    }
    else {
      $variables['options']['president_attributes']['class'][] = 'battler-battle-winner';
      $variables['options']['robot_attributes']['class'][] = 'battler-battle-loser';
    }
  }
}

/**
 * Allows us to add node--panopoly-news-article.tpl.php to the
 * registry.
 *
 * http://www.metachunk.com/blog/adding-module-path-drupal-7-theme-registry
 *
 * Implements hook_theme_registry_alter()
 **/
function playbox_battles_theme_registry_alter(&$theme_registry) {
  // add template file
  $mod_path = drupal_get_path('module', 'playbox_battles') . '/templates';
  $theme_registry_copy = $theme_registry;       // munge on a copy
  _theme_process_registry($theme_registry_copy, 'phptemplate', 'theme_engine', 'pow', $mod_path);
  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);
  $hooks = array('node');
  foreach ($hooks as $h) {
    _playbox_battles_insert_after_first_element($theme_registry[$h]['theme paths'], $mod_path);
  }
}

/**
 * Updates the vote total for a battler
 */
function playbox_battles_vote($ajax, $nid, $type) {

  $is_ajax = $ajax === 'ajax';

  // Secure the DB
  if (empty($_GET['tok']) || !drupal_valid_token($_GET['tok'], 'playbox_battles_vote_' . $nid)) {
    return MENU_ACCESS_DENIED;
  }

  // Do some fun stuff to update the user IRL
  if ($is_ajax) {
    $commands = array();

    $commands[] = ajax_command_remove('.my-custom-log tr.flid-' . $flid);

    return array(
      '#type' => 'ajax',
      '#commands' => $commands,
    );
  }
  else {
    drupal_set_message(t('SOMETHING'));
    drupal_goto();
  }
}

/**
 * Helper function for re-ordering arrays (needed by theme_registry_alter)
 *
 * http://www.metachunk.com/blog/adding-module-path-drupal-7-theme-registry
 */
function _playbox_battles_insert_after_first_element(&$a, $element) {
  if(is_array($a)) {
    $first_element = array_shift($a);
    array_unshift($a, $first_element, $element);
  }
}
